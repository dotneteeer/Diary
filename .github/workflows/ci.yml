name: CI Pipeline

on:
  push:
    branches:
      - master
      - "feature/*"
      - "Diary-add-*"
  pull_request:
    branches:
      - master
      - "feature/*"
      - "Diary-add-*"

jobs:
  sonar-scan:
    name: Run Sonar scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  build:
    name: Build project
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-\

      - name: Install dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build -o ./Diary_build

      - name: List build directory  # Additionally, to check the content
        run: ls -R Diary_build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: 'Diary_build/**'
          if-no-files-found: 'error'
  
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./Diary_build

      - name: Run Unit Tests
        run: dotnet test --no-build --filter "Category=Unit"

      - name: Run Unit Tests (detailed)
        run: dotnet test --no-build --filter "Category=Unit" --verbosity detailed

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./Diary_build

      - name: Run Integration Tests
        run: dotnet test --no-build --filter "Category=Integration"
        
      - name: Run Integration Tests (detailed)
        run: dotnet test --no-build --filter "Category=Integration" --verbosity detailed

  e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0'
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./Diary_build

      - name: Set Environment Variables for JWT
        run: |
          echo "JWT__Issuer=${{ secrets.JWT_ISSUER }}" >> $GITHUB_ENV
          echo "JWT__Audience=${{ secrets.JWT_AUDIENCE }}" >> $GITHUB_ENV
          echo "JWT__Authority=${{ secrets.JWT_AUTHORITY }}" >> $GITHUB_ENV
          echo "JWT__JwtKey=${{ secrets.JWT_KEY }}" >> $GITHUB_ENV
          echo "JWT__LifeTime=${{ secrets.JWT_LIFETIME }}" >> $GITHUB_ENV
          echo "JWT__RefreshTokenValidityInDays=${{ secrets.JWT_REFRESH_DAYS }}" >> $GITHUB_ENV
          
      - name: Run E2E Tests
        run: dotnet test --no-build --filter "Category=E2E"

      - name: Run E2E Tests (detailed)
        run: dotnet test --no-build --filter "Category=E2E" --verbosity detailed
        env:
          ASPNETCORE_ENVIRONMENT: Development
          DOTNET_LOG_LEVEL: Information
          JWT_SECRET: ${{ secrets.JWT }}
